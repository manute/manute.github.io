<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Manute Blog]]></title>
  <link href="http://manute.github.io/atom.xml" rel="self"/>
  <link href="http://manute.github.io/"/>
  <updated>2013-07-21T20:19:50+02:00</updated>
  <id>http://manute.github.io/</id>
  <author>
    <name><![CDATA[Manuel Alonso]]></name>
    <email><![CDATA[manuteali@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Add content dynamically to Popover Bootstrap]]></title>
    <link href="http://manute.github.io/blog/2013/07/12/add-content-dynamically-to-popover-bootstrap/"/>
    <updated>2013-07-12T11:35:00+02:00</updated>
    <id>http://manute.github.io/blog/2013/07/12/add-content-dynamically-to-popover-bootstrap</id>
    <content type="html"><![CDATA[<p>The use-case is:</p>

<ul>
 <li>Click in the bottom.</li>
 <li>Show Popover.</li>
 <li>Click into popover.</li>
 <li>Change num of clikcs inside popover.</li>
</ul>


<p>To change the content, we need to access any element of the popover. The popover is created dynamically, but you can access to his properties with the function <strong>data(&lsquo;popover&rsquo;).tip()</strong> on the object popover . To change the content I made the example with the click event inside the popover.</p>

<p>Here is an example in <strong>jsFiddle</strong> <strong>(class css of popover not are by default of bootstrap , change for yours)</strong></p>

<iframe style="width: 100%; height: 300px" src="http://jsfiddle.net/uyYkE/2/embedded/js,resources,html,css,result/light/"></iframe>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Functional Lists in Groovy]]></title>
    <link href="http://manute.github.io/blog/2013/07/11/functional-lists-in-groovy/"/>
    <updated>2013-07-11T11:13:00+02:00</updated>
    <id>http://manute.github.io/blog/2013/07/11/functional-lists-in-groovy</id>
    <content type="html"><![CDATA[<p>Lately I&rsquo;m reading books on functional programming languages ​​like  <strong>Clojure</strong> and <strong>Erlang.</strong>
There is a book for Erlang that covers all aspect of the language <strong><a href="http://pragprog.com/book/jaerlang/programming-erlang" target="_blank">Programming Erlang</a></strong>.
There is also one book(in spanish) very good for Erlang and is free from <strong><a href="http://bosqueviejo" target="_blank">bosqueviejo</a></strong>. And for Clojure there are many like <strong><a href="http://www.joyofclojure.com/" target="_blank">The Joy of Clojure</a></strong> or <strong><a href="https://leanpub.com/fp-oo" target="_blank">Functional Programming for the Object-Oriented Programmer</a></strong>.
</br></p>

<p>What I&rsquo;ve learned in these books is to think of another way to abstract problems and break them into reusable functions (also aspects such as concurrency, immutability and recursion).
</br></p>

<p>Groovy has much functional style , in fact , the <strong><a href="http://groovy.codehaus.org/Closures">closures</a>  </strong> for me is a clear example:</p>

<div><script src='https://gist.github.com/5311752.js'></script>
<noscript><pre><code></code></pre></noscript></div>


<p></br></p>

<p>The functions that I will show below, I will add them to the class <strong><a href="http://groovy.codehaus.org/groovy-jdk/java/util/List.html">List</a></strong> dynamically by the metaclass. I think it&rsquo;s better example that only show the functions , because then can reuse the functions in other parts of project.</p>

<p></br>
For example, I will mimic the function <strong>map/2 from Erlang</strong> and I will add to the Groovy List class.</p>

<h2><strong>Map</strong></h2>


<p>Is a function that takes a function F  and list L as arguments and returns the new list that is obtained by applying F to each of the elements in L.</p>

<div><script src='https://gist.github.com/5327266.js'></script>
<noscript><pre><code></code></pre></noscript></div>


<p>I&rsquo;ve done a bit tricky, because in reality the &ldquo;map&rdquo; function does not apply on a list already created, but I did so to show how to add a method to the List class dynamically. But I made ​​it more functional as possible, without modifying the original list and returning a new list( it is not inmutable, in Groovy to make a List inmutable call &ndash;> <strong><a href="http://groovy.codehaus.org/groovy-jdk/java/util/List.html#asImmutable()">asInmutable()</a></strong> )</p>

<p>Be careful with add methods by metaClass , because if a method already exists with the same name it will be overwritten.</p>

<p>Let&rsquo;s do another example, I&rsquo;ll imitate the function <strong><a href="http://underscorejs.org/#pluck"> pluck of Underscore.js </a></strong>.</p>

<h2><strong>Pluck</strong></h2>


<p>This function is the common use-case for map : extracting a list of property values.</p>

<div><script src='https://gist.github.com/5318651.js'></script>
<noscript><pre><code></code></pre></noscript></div>


<p>As we see it is very easy to add functions to the Groovy List class, that are useful and / or we use a lot. In addition to obtain clean code, we can combine them to make still more powerful.</p>

<p>Note: If you use <strong><a href="http://grails.org/">Grails</a></strong> these functions can be added dynamically with the Bootstrap.groovy ; so these functions can be used in all the classes of the project.</p>
]]></content>
  </entry>
  
</feed>
